name: Build and push container image

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+.?*"

jobs:
  docker:
    runs-on: ubuntu-latest
    environment: triggers
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |         
            ghcr.io/hanstrompert/test
          tags: |
            type=match,pattern=\d+.\d+.\d+.*
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      #- name: Build and push
      #  uses: docker/build-push-action@v5
      #  with:
      #    context: .
      #    platforms: linux/amd64,linux/arm64
      #    push: true
      #    tags: ${{ steps.meta.outputs.tags }}
      #    labels: ${{ steps.meta.outputs.labels }}
      - name: Get latest commit sha for main of test-client
        id: sha
        uses: actions/github-script@v5
        with:
          #github-token: ${{ secrets.CREATE_TAG_PAT }}
          result-encoding: string
          #result-encoding: json
          script: |
            const ret = github.rest.repos.getCommit({
              owner: 'hanstrompert',
              repo: 'test-client',
              ref: 'heads/main',
            })
            const commit = await github.paginate(ret)
            return commit.sha
          #script: |
          #  return github.rest.repos.get({
          #    owner: 'hanstrompert',
          #    repo: 'test-client',
          #  })
      - name: Get result
        run: echo "${{ steps.sha.outputs.result }}
      - name: Tag test-client
        uses: actions/github-script@v5
        env:
          REF: ${{ format('refs/tags/{0}', steps.sha.outputs.result.sha) }}
          # REF: refs/tags/0.6.6
        with:
          github-token: ${{ secrets.CREATE_TAG_PAT }}
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: 'test-client',
              ref: process.env.REF,
              sha: '45353f37b0517b51e25596e1d588e4e6f9cbc21d',
            })
